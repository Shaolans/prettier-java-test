on:
  release:
    types: [created]
name: Binary artifacts
jobs:
  generate:
    env:
      # The version needs to match with the one used in the printer
      PRETTIER_API: 2.0.0
    name: Create release artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          path: 'prettier-java'
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Install tools
        run: |
          sudo apt update
          sudo apt install jq
          npm i -g pkg
      - name: Installing/Linking dependencies
        run: |
          cd $GITHUB_WORKSPACE/prettier-java/packages/java-parser
          npm i
          npm link
          cd $GITHUB_WORKSPACE/prettier-java/packages/prettier-plugin-java
          npm i
          npm link java-parser
      - name: Checkout Prettier
        uses: actions/checkout@v2
        with:
          repository: prettier/prettier
          ref: refs/tags/${{ env.PRETTIER_API }}
          path: prettier
      - name: Link Prettier-java to Prettier
        run: |
          cd $GITHUB_WORKSPACE/prettier
          npm i
          npm i prettier-plugin-java --save
          npm link prettier-plugin-java
      - name: Build the artifacts
        run: |
          cd $GITHUB_WORKSPACE/prettier
          pkg package.json -o $GITHUB_WORKSPACE/prettier-java-${GITHUB_REF##*/} --targets node10-linux-x64,node10-macos-x64,node10-win-x64
      - name: Compress artifacts
        run: |
          gzexe prettier-java-${GITHUB_REF##*/}-linux
          gzexe prettier-java-${GITHUB_REF##*/}-macos
          gzexe prettier-java-${GITHUB_REF##*/}-win.exe
          rm prettier-java-${GITHUB_REF##*/}-linux~ prettier-java-${GITHUB_REF##*/}-macos prettier-java-${GITHUB_REF##*/}-win.exe
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'prettier-java-*'